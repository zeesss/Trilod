/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, HostListener, Input, ErrorHandler } from '@angular/core';
import { ShowHideService } from './show-hide.service';
export class ShowHideTriggerDirective {
    /**
     * @param {?} service
     * @param {?} errorHandler
     */
    constructor(service, errorHandler) {
        this.service = service;
        this.errorHandler = errorHandler;
    }
    /**
     * @return {?}
     */
    onClick() {
        if (this.showHideTrigger) {
            this.service.toggleShow(this.showHideTrigger);
        }
        else {
            this.errorHandler.handleError(new Error(`No input id found. Please read the docs!`));
        }
    }
}
ShowHideTriggerDirective.decorators = [
    { type: Directive, args: [{
                selector: '[showHideTrigger]'
            },] }
];
/** @nocollapse */
ShowHideTriggerDirective.ctorParameters = () => [
    { type: ShowHideService },
    { type: ErrorHandler }
];
ShowHideTriggerDirective.propDecorators = {
    showHideTrigger: [{ type: Input }],
    onClick: [{ type: HostListener, args: ['click',] }]
};
if (false) {
    /** @type {?} */
    ShowHideTriggerDirective.prototype.showHideTrigger;
    /**
     * @type {?}
     * @private
     */
    ShowHideTriggerDirective.prototype.service;
    /**
     * @type {?}
     * @private
     */
    ShowHideTriggerDirective.prototype.errorHandler;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hvdy1oaWRlLXRyaWdnZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXNob3ctaGlkZS1wYXNzd29yZC8iLCJzb3VyY2VzIjpbImxpYi9zaG93LWhpZGUtdHJpZ2dlci5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBS3RELE1BQU0sT0FBTyx3QkFBd0I7Ozs7O0lBR25DLFlBQW9CLE9BQXdCLEVBQVUsWUFBMEI7UUFBNUQsWUFBTyxHQUFQLE9BQU8sQ0FBaUI7UUFBVSxpQkFBWSxHQUFaLFlBQVksQ0FBYztJQUFHLENBQUM7Ozs7SUFHcEYsT0FBTztRQUNMLElBQUksSUFBSSxDQUFDLGVBQWUsRUFBRTtZQUN4QixJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7U0FDL0M7YUFBTTtZQUNMLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLElBQUksS0FBSyxDQUFDLDBDQUEwQyxDQUFDLENBQUMsQ0FBQztTQUN0RjtJQUNILENBQUM7OztZQWZGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2FBQzlCOzs7O1lBSlEsZUFBZTtZQURpQixZQUFZOzs7OEJBT2xELEtBQUs7c0JBSUwsWUFBWSxTQUFDLE9BQU87Ozs7SUFKckIsbURBQWtDOzs7OztJQUV0QiwyQ0FBZ0M7Ozs7O0lBQUUsZ0RBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBIb3N0TGlzdGVuZXIsIElucHV0LCBFcnJvckhhbmRsZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNob3dIaWRlU2VydmljZSB9IGZyb20gJy4vc2hvdy1oaWRlLnNlcnZpY2UnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbc2hvd0hpZGVUcmlnZ2VyXSdcbn0pXG5leHBvcnQgY2xhc3MgU2hvd0hpZGVUcmlnZ2VyRGlyZWN0aXZlIHtcbiAgQElucHV0KCkgc2hvd0hpZGVUcmlnZ2VyPzogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgc2VydmljZTogU2hvd0hpZGVTZXJ2aWNlLCBwcml2YXRlIGVycm9ySGFuZGxlcjogRXJyb3JIYW5kbGVyKSB7fVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJylcbiAgb25DbGljaygpIHtcbiAgICBpZiAodGhpcy5zaG93SGlkZVRyaWdnZXIpIHtcbiAgICAgIHRoaXMuc2VydmljZS50b2dnbGVTaG93KHRoaXMuc2hvd0hpZGVUcmlnZ2VyKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5lcnJvckhhbmRsZXIuaGFuZGxlRXJyb3IobmV3IEVycm9yKGBObyBpbnB1dCBpZCBmb3VuZC4gUGxlYXNlIHJlYWQgdGhlIGRvY3MhYCkpO1xuICAgIH1cbiAgfVxufVxuIl19