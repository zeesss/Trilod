/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, HostListener, Input, ErrorHandler } from '@angular/core';
import { ShowHideService } from './show-hide.service';
var ShowHideTriggerDirective = /** @class */ (function () {
    function ShowHideTriggerDirective(service, errorHandler) {
        this.service = service;
        this.errorHandler = errorHandler;
    }
    /**
     * @return {?}
     */
    ShowHideTriggerDirective.prototype.onClick = /**
     * @return {?}
     */
    function () {
        if (this.showHideTrigger) {
            this.service.toggleShow(this.showHideTrigger);
        }
        else {
            this.errorHandler.handleError(new Error("No input id found. Please read the docs!"));
        }
    };
    ShowHideTriggerDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[showHideTrigger]'
                },] }
    ];
    /** @nocollapse */
    ShowHideTriggerDirective.ctorParameters = function () { return [
        { type: ShowHideService },
        { type: ErrorHandler }
    ]; };
    ShowHideTriggerDirective.propDecorators = {
        showHideTrigger: [{ type: Input }],
        onClick: [{ type: HostListener, args: ['click',] }]
    };
    return ShowHideTriggerDirective;
}());
export { ShowHideTriggerDirective };
if (false) {
    /** @type {?} */
    ShowHideTriggerDirective.prototype.showHideTrigger;
    /**
     * @type {?}
     * @private
     */
    ShowHideTriggerDirective.prototype.service;
    /**
     * @type {?}
     * @private
     */
    ShowHideTriggerDirective.prototype.errorHandler;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hvdy1oaWRlLXRyaWdnZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXNob3ctaGlkZS1wYXNzd29yZC8iLCJzb3VyY2VzIjpbImxpYi9zaG93LWhpZGUtdHJpZ2dlci5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXREO0lBTUUsa0NBQW9CLE9BQXdCLEVBQVUsWUFBMEI7UUFBNUQsWUFBTyxHQUFQLE9BQU8sQ0FBaUI7UUFBVSxpQkFBWSxHQUFaLFlBQVksQ0FBYztJQUFHLENBQUM7Ozs7SUFHcEYsMENBQU87OztJQURQO1FBRUUsSUFBSSxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ3hCLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztTQUMvQzthQUFNO1lBQ0wsSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUMsSUFBSSxLQUFLLENBQUMsMENBQTBDLENBQUMsQ0FBQyxDQUFDO1NBQ3RGO0lBQ0gsQ0FBQzs7Z0JBZkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxtQkFBbUI7aUJBQzlCOzs7O2dCQUpRLGVBQWU7Z0JBRGlCLFlBQVk7OztrQ0FPbEQsS0FBSzswQkFJTCxZQUFZLFNBQUMsT0FBTzs7SUFRdkIsK0JBQUM7Q0FBQSxBQWhCRCxJQWdCQztTQWJZLHdCQUF3Qjs7O0lBQ25DLG1EQUFrQzs7Ozs7SUFFdEIsMkNBQWdDOzs7OztJQUFFLGdEQUFrQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdExpc3RlbmVyLCBJbnB1dCwgRXJyb3JIYW5kbGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTaG93SGlkZVNlcnZpY2UgfSBmcm9tICcuL3Nob3ctaGlkZS5zZXJ2aWNlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3Nob3dIaWRlVHJpZ2dlcl0nXG59KVxuZXhwb3J0IGNsYXNzIFNob3dIaWRlVHJpZ2dlckRpcmVjdGl2ZSB7XG4gIEBJbnB1dCgpIHNob3dIaWRlVHJpZ2dlcj86IHN0cmluZztcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNlcnZpY2U6IFNob3dIaWRlU2VydmljZSwgcHJpdmF0ZSBlcnJvckhhbmRsZXI6IEVycm9ySGFuZGxlcikge31cblxuICBASG9zdExpc3RlbmVyKCdjbGljaycpXG4gIG9uQ2xpY2soKSB7XG4gICAgaWYgKHRoaXMuc2hvd0hpZGVUcmlnZ2VyKSB7XG4gICAgICB0aGlzLnNlcnZpY2UudG9nZ2xlU2hvdyh0aGlzLnNob3dIaWRlVHJpZ2dlcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZXJyb3JIYW5kbGVyLmhhbmRsZUVycm9yKG5ldyBFcnJvcihgTm8gaW5wdXQgaWQgZm91bmQuIFBsZWFzZSByZWFkIHRoZSBkb2NzIWApKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==